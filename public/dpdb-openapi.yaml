openapi: 3.0.0
info:
  title: Disney Pins DataBase
  description: Disney Pins DataBase is an API which aims to list every Pin's from all Disneyland parks. This project is currently under progress, and will be presented at the E4's test from the BTS SIO, specialized in SLAM.
  version: 1.0.0
servers:
  - url: https://127.0.0.1/api
    description: Local server test
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: token
  responses:
    noToken:
      description: Request parameters missing or invalide
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    invalideToken:
      description: Invalid API Token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    databaseError:
      description: An error occurred while processing the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    error:
      type: object
      properties:
        error:
          type: object
          properties:
            status:
              type: integer
            code:
              type: string
            message:
              type: string
    pins:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        release_date:
          type: string
        edition_number:
          type: integer
          minimum: 1
        series:
          $ref: '#/components/schemas/minimum_series'
        type:
          $ref: '#/components/schemas/minimum_type'
        characters:
          type: array
          items:
            $ref: '#/components/schemas/minimum_character'
        attractions:
          type: array
          items:
            $ref: '#/components/schemas/minimum_attraction'
    minimum_pins:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        release_date:
          type: string
        edition_number:
          type: integer
          minimum: 1
        series:
          $ref: '#/components/schemas/minimum_series'
        type:
          $ref: '#/components/schemas/minimum_type'
    series:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_pins:
          type: integer
        park:
          $ref: '#/components/schemas/minimum_park'
    minimum_series:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        park:
          $ref: '#/components/schemas/minimum_park'
    character:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_pins:
          type: integer
        nb_series:
          type: integer
    minimum_character:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
    attraction:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_pins:
          type: integer
        nb_series:
          type: integer
        park:
          $ref: '#/components/schemas/minimum_park'
    minimum_attraction:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        park:
          $ref: '#/components/schemas/minimum_park'
    type:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_pins:
          type: integer
        nb_series:
          type: integer
    minimum_type:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
    park:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_series:
          type: integer
        nb_pins:
          type: integer
        nb_attractions:
          type: integer
        country:
          $ref: '#/components/schemas/minimum_country'
    minimum_park:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        country:
          $ref: '#/components/schemas/minimum_country'
    country:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        nb_park:
          type: integer
        nb_series:
          type: integer
        nb_pins:
          type: integer
        nb_attractions:
          type: integer
    minimum_country:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
security:
  - apiKeyAuth: []
paths:
  /pins/{id}:
    get:
      summary: GET Pins BY ID.
      description: Get a pins using its ID
      tags:
        - Pins
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a Pins
      responses:
        '200':
          description: Pins on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      pins_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/pins'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /pins:
    get:
      summary: GET Pins list.
      description: Get a list of pins
      tags:
        - Pins
      parameters:
        - in: header
          schema:
            type: integer
            minimum: 1
            default: 50
          required: false
          name: limit
          description: Limit of pins to return
        - in: header
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          name: offset
          description: Ignore X first result
        - in: header
          schema:
            type: string
          required: false
          name: from_release_date
          description: Only pins released from this date (include)
        - in: header
          schema:
            type: string
          required: false
          name: until_release_date
          description: Only pins released until this date (include)
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: min_edition_number
          description: Only pins with minimum to this number of edition (include)
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: max_edition_number
          description: Only pins with maximum to this number of edition (include)
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: type_id
          description: Only pins of this type
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: series_id
          description: Only pins in this series
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: park_id
          description: Only pins in this park (ignore if series_id is defined)
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: country_id
          description: Only pins in this country (ignore if series_id or park_id is defined)
        - in: header
          schema:
            type: string
          required: false
          name: name_includes
          description: Only pins including this string in its name
      responses:
        '200':
          description: Pins on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      limit:
                        type: integer
                        minimum: 1
                      offset:
                        type: integer
                      from_release_date:
                        type: string
                      until_release_date:
                        type: string
                      min_edition_number:
                        type: integer
                      max_edition_number:
                        type: integer
                      type_id:
                        type: integer
                      series_id:
                        type: integer
                      park_id:
                        type: integer
                      country_id:
                        type: integer
                      name_includes:
                        type: string
                  nb_result:
                    type: integer
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimum_pins'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /series/{id}:
    get:
      summary: GET Series BY ID.
      description: Get a series using its ID
      tags:
        - Series
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a collection
      responses:
        '200':
          description: Series on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      series_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/series'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /series/:
    get:
      summary: GET Series list.
      description: Get a list of series
      tags:
        - Series
      parameters:
        - in: header
          schema:
            type: integer
            minimum: 1
            default: 50
          required: false
          name: limit
          description: Limit of series to return
        - in: header
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          name: offset
          description: Ignore X first result
        - in: header
          schema:
            type: integer
          required: false
          name: min_nb_pins
          description: Only series with minimum to this number of pins (include)
        - in: header
          schema:
            type: integer
          required: false
          name: max_nb_pins
          description: Only series with maximum to this number of pins (include)
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: park_id
          description: Only series in this park
        - in: header
          schema:
            type: integer
            minimum: 1
          required: false
          name: country_id
          description: Only series in this country (ignore if park_id is defined)
        - in: header
          schema:
            type: string
          required: false
          name: name_includes
          description: Only series including this string in its name
      responses:
        '200':
          description: Series on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      limit:
                        type: integer
                        minimum: 1
                      offset:
                        type: integer
                      min_nb_pins:
                        type: integer
                      max_nb_pins:
                        type: integer
                      park_id:
                        type: integer
                      country_id:
                        type: integer
                      name_includes:
                        type: string
                  nb_result:
                    type: integer
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/series'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /character/{id}:
    get:
      summary: GET Character BY ID.
      description: Get a character using its ID
      tags:
        - Character
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a character
      responses:
        '200':
          description: Character on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      character_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/character'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /attraction/{id}:
    get:
      summary: GET Attraction BY ID.
      description: Get a attraction using its ID
      tags:
        - Attraction
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a attraction
      responses:
        '200':
          description: Attraction on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      attraction_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/attraction'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /type/{id}:
    get:
      summary: GET Type BY ID.
      description: Get a type using its ID
      tags:
        - Type
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a Type
      responses:
        '200':
          description: Type on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      type_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/type'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /park/{id}:
    get:
      summary: GET Park BY ID.
      description: Get a park using its ID
      tags:
        - Park
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a park
      responses:
        '200':
          description: Park on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      park_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/park'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'
  /country/{id}:
    get:
      summary: GET Country BY ID.
      description: Get a country using its ID
      tags:
        - Country
      parameters:
        - in: path
          schema:
            type: integer
          required: true
          name: id
          description: ID of a Country
      responses:
        '200':
          description: Country on JSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      country_id:
                        type: string
                        minimum: 1
                  result:
                    $ref: '#/components/schemas/country'
        '400':
          $ref: '#/components/responses/noToken'
        '401':
          $ref: '#/components/responses/invalideToken'
        '500':
          $ref: '#/components/responses/databaseError'